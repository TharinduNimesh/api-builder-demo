services:
  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: api_builder_db
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - webnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      PORT: 5173
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - webnet

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - webnet

volumes:
  db-data:

networks:
  webnet:
    driver: bridge